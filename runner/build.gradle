apply plugin: 'java'

def getPriority(Project myProject) {
    return myProject.hasProperty("priority") ? myProject.priority : 10
}

def getAllSubprojects() {
    def projects = new HashSet();
    projects.addAll(project(":infra").getSubprojects());
    projects.addAll(project(":services").getSubprojects());
    return projects;
}

project.gradle.projectsEvaluated {
    getAllSubprojects().each { p ->
        //println "Adding dependency to " + p.name;
        run.dependsOn p.tasks.jar
        run.dependsOn project.tasks.printdep
    }
}

dependencies {
    //compile 'org.springframework.boot:spring-boot-starter-logging'
    compile 'commons-io:commons-io'
    compile 'com.google.guava:guava'
}

task run(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.reluxa.Runner'
    workingDir = project.rootProject.projectDir
    args = [project.buildDir.getAbsolutePath() + "project.depenendencies"];
}

/*
Collects dependencies into project.depenendencies in the format of
    <path to service thin jar file name>|<main class name>|<classpath of service>
 */
task printdep {
    doLast {
        def deps = new File(project.buildDir.getAbsolutePath() + "project.depenendencies");
        deps.createNewFile();
        deps.write("");
        getAllSubprojects().each { p ->
            deps.append(p.libsDir.getAbsolutePath() + File.separator + p.tasks.jar.archiveName + "|"
                    + p.mainClassName + "|"
                    + getPriority(p) + "|"
                    + p.configurations.runtime.asPath + "\n");
        }
    }
}

configure(run) {
    group = 'application'
    description = 'Running the Runner'
}